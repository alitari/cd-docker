nexus-data:
  image: sonatype/nexus
  command: echo "data-only container for Nexus"
nexus:
  image: sonatype/nexus
  ports:
  - 8081:8081
  volumes_from:
  - nexus-data
registry-data:
  image: busybox
  volumes:
  - /var/lib/docker/registry
  command: echo "data-only container for registry"
registry:
  image: registry:2
  ports:
  - ${DOCKERREGISTRY_PORT}:5000
  volumes_from:
  - registry-data
registry-frontend:
  image: konradkleine/docker-registry-frontend:v2
  ports:
  - 8080:80
  environment:
  - REG1="http://${DOCKER_HOST_IP_GCEINFRA}:${DOCKERREGISTRY_PORT}/v1/"
  - ENV_DOCKER_REGISTRY_HOST=${DOCKER_HOST_IP_GCEINFRA}
  - ENV_DOCKER_REGISTRY_PORT=${DOCKERREGISTRY_PORT}
  - ENV_MODE_BROWSE_ONLY=false
sonar-data:
  image: postgres
  command: echo "data-only container for sonar-db"
sonar-db:
  image: postgres
  ports:
  - 5432:5432
  environment:
  - POSTGRES_USER=sonar
  - POSTGRES_PASSWORD=sonaracid
  volumes_from:
  - sonar-data
sonar-conf:
  image: sonarqube
  command: echo "data-only container for sonarqube"
sonarqube:
  image: sonarqube
  ports:
  - 9000:9000
  environment:
  - SONARQUBE_JDBC_USERNAME=sonar
  - SONARQUBE_JDBC_PASSWORD=sonaracid
  - SONARQUBE_JDBC_URL=jdbc:postgresql://${DOCKER_HOST_IP_GCEINFRA}:5432/sonar
  volumes_from:
  - sonar-conf
jenkins-data:
  image: jenkins
  volumes:
  - /var/jenkins_home
  command: echo "data-only container for jenkins"
jenkins:
  build: jenkins
  ports:
  - 8180:8080
  - 50000:50000
  environment:
  - DOCKERREGISTRY_PORT=${DOCKERREGISTRY_PORT}
  - DOCKER_HOST_IP_INFRA=${DOCKER_HOST_IP_GCEINFRA}
  - DOCKER_HOST_PORT_INFRA=${DOCKER_HOST_PORT_GCEINFRA}
  - DOCKER_HOST_IP_QA=${DOCKER_HOST_IP_GCEQA}
  - DOCKER_HOST_PORT_QA=${DOCKER_HOST_PORT_GCEQA}
  - DOCKER_CERT_PATH_QA=/.docker/qa
  - DB_PASSWORD_QA=${DB_PASSWORD_QA}
  - DOCKER_HOST_IP_ACC=${DOCKER_HOST_IP_GCEACC}
  - DOCKER_HOST_PORT_ACC=${DOCKER_HOST_PORT_GCEACC}
  - DOCKER_CERT_PATH_ACC=/.docker/acc
  - DB_PASSWORD_ACC=${DB_PASSWORD_ACC}
  volumes:
  - ${DOCKER_CERT_PATH_GCEQA}:/.docker/qa
#  - ${DOCKER_CERT_PATH_GCEACC}:/.docker/acc
  volumes_from:
  - jenkins-data
nginx:
  build: nginx
  ports:
  - 80:80
