<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.alexkrieg</groupId>
	<artifactId>cd-docker</artifactId>
	<packaging>pom</packaging>
	<version>1.0-${buildNumber}</version>
	<name>cd-docker</name>


	<properties>
	
		<!-- Docker Hosts -->
		<infraDockerHostIp>${env.DOCKER_HOST_IP_INFRA}</infraDockerHostIp>
		<infraDockerPort>${env.DOCKER_HOST_PORT_INFRA}</infraDockerPort>

		<qaDockerHostIp>${env.DOCKER_HOST_IP_QA}</qaDockerHostIp>
		<qaDockerPort>${env.DOCKER_HOST_PORT_QA}</qaDockerPort>
		<qaDockerCertPath>${env.DOCKER_CERT_PATH_QA}</qaDockerCertPath>

		<accDockerHostIp>${env.DOCKER_HOST_IP_ACC}</accDockerHostIp>
		<accDockerPort>${env.DOCKER_HOST_PORT_ACC}</accDockerPort>
		<accDockerCertPath>${env.DOCKER_CERT_PATH_ACC}</accDockerCertPath>
		
		<!-- docker image -->
		<image.registryHost>${infraDockerHostIp}:${env.DOCKERREGISTRY_PORT}/</image.registryHost>
		<image.namespace>alitari/</image.namespace>

		<sonar.host.url>http://${infraDockerHostIp}:9000</sonar.host.url>
		<sonar.jdbc.url>jdbc:postgresql://${infraDockerHostIp}/sonar</sonar.jdbc.url>

	</properties>
	
	<distributionManagement>
		<repository>
			<id>releases</id>
			<url>http://${infraDockerHostIp}:8081/content/repositories/releases/</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.3</version>
			</plugin>
		</plugins>
	</build>

	<modules>
		<module>wildfly-webservice</module>
		<module>webservice-performance</module>
	</modules>

</project>